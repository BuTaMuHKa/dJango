"""
Django settings for samplesite project.

Generated by 'django-admin startproject' using Django 3.0.

For more information on this file, see
https://docs.djangoproject.com/en/3.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.0/ref/settings/
"""

import os
from django.core.mail.backends.console import EmailBackend
#from django.contrib.auth.backends import ModelBackend 

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'i5lq)q7@8!rp&1rw=of18^ae9m(j3#nn)9of)f*aksgkkxyo5h'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

LOGIN_REDIRECT_URL = 'bboard:index'

#Мои настройки 

MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
MEDIA_URL = '/media/'
# print ("base dir path", BASE_DIR)

# def make_key(key, key_prefix, version):
#     return ':'.join([key_prefix, str(version), key])

#Кэш
# CACHES = {
#     'default':{
#         'BACKEND': 'django.core.cache.backends.db.DatabaseCache',
#         'LOCATION': 'cache_table',
#         'TIMEOUT': 120,
#         'OPTION': {
#             'MAX_ENTRIES': 200
#         }
#     }
#     # 'special':{
#     #     'BACKEND':'django.core.cache.backends.locmem.LocMemCache',
#     #     'LOCATION':'cache2',
#     # }
# }
#Настройки почты
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
DEFAULT_FROM_EMAIL = [
    {
        'EMAIL_HOST': 'smtp.mail.ru',
        'EMAIL_PORT':'465',
        'EMAIL_USE_TLS': True,
        'EMAIL_HOST_USER':'klass-1-90@mail.ru',
        'EMAIL_HOST_PASSWORD':'BuTaJIuK_23061997_',
    }
]


#Алиасы для вывода картинок бесполезная хрень
THUMBNAIL_ALIASES = {
    'bboard.Img.img': {
        'default': {
            'size': (350, 400),
            'crop':'smart',
        },
        'my_size':{
            'size':(1000, 1200),
            'crop': 'smart',
        }
    },
    'testapp':{
        'default':{
            'size': ( 400, 300 ),
            'crop': 'smart',
            'bw' : True,
        },
    },
    '':{
        'default':{
            'size':(180, 240),
            'crope':'scale',
        },
        'big':{
            'size': (480, 640),
            'crop': '10,10',
        },
    },
}

# Application definition
INSTALLED_APPS = [
    'bboard.apps.BboardConfig',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'captcha',
    'precise_bbcode',
    'bootstrap4',
    'easy_thumbnails',
    'django_cleanup',
    'social_django',
    'sslserver',
    'crispy_forms',
]

#пакет bootstrap
CRISPY_TEMPLATE_PACK = 'bootstrap4'

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.http.ConditionalGetMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.middleware.cache.UpdateCacheMiddleware',
    'django.middleware.cache.FetchFromCacheMiddleware',
]


#Логика работы сессий
# SESSION_ENGINE = [
#     'django.contrib.sessions.backends.db',
# ]

#Теги для вывода в шаблон
#CRITICAL = 50
# MESSAGE_TAGS = {
# 	CRITICAL:'critical',
# }

ROOT_URLCONF = 'samplesite.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'django.template.context_processors.i18n',
                'django.template.context_processors.media',
            ],
            'libraries':{
            'my_templatetag': 'bboard.templatetags.my_templatetags',
            }
        },
    },
]

WSGI_APPLICATION = 'samplesite.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.0/ref/settings/#databases


DATABASES = {
    'default': {
        'NAME': 'samplesite',
        'ENGINE': 'django.db.backends.mysql',
        'USER': 'root',
        'PASSWORD': '123456789',
        'HOST': 'localhost',
        'PORT':'',
        'ATOMIC_REQUEST': False,
        #'AVTOCOMIT': True,
    }
}



# Password validation
# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

AUTHENTICATION_BACKENDS = (
    'social_core.backends.open_id.OpenIdAuth',
    'social_core.backends.google.GoogleOpenId',
    'social_core.backends.google.GoogleOAuth2',
    'social_core.backends.google.GoogleOAuth',
    'social_core.backends.twitter.TwitterOAuth',
    'social_core.backends.yahoo.YahooOpenId',
    'django.contrib.auth.backends.ModelBackend',
)

SOCIAL_AUTH_GOOGLE_OAUTH2_KEY = '521657183523-7kbnv1u8ffiuig81d2kvgmmti4tjasgq.apps.googleusercontent.com'
SOCIAL_AUTH_GOOGLE_OAUTH2_SECRET = '0gptUDlpQCN1wQtUXNzCp_jd' 
# Internationalization
# https://docs.djangoproject.com/en/3.0/topics/i18n/

LANGUAGE_CODE = 'ru'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.0/howto/static-files/

STATIC_URL = '/static/'
